{
  "name": "ollama-code",
  "version": "0.1.0",
  "description": "Ollama Code CLI - Your local AI coding assistant in the terminal",
  "main": "dist/src/cli.js",
  "type": "module",
  "bin": {
    "ollama-code": "dist/src/cli-selector.js",
    "ollama-code-simple": "dist/src/simple-cli.js",
    "ollama-code-advanced": "dist/src/cli.js",
    "ollama-code-interactive": "dist/src/cli-selector.js"
  },
  "scripts": {
    "build": "tsc && npm run postbuild",
    "postbuild": "chmod +x dist/src/cli-selector.js dist/src/cli.js dist/src/simple-cli.js",
    "start": "node dist/src/cli-selector.js",
    "start:simple": "node dist/src/simple-cli.js",
    "start:advanced": "node dist/src/cli.js",
    "start:interactive": "node dist/src/cli-selector.js",
    "dev": "ts-node --esm src/cli-selector.ts",
    "dev:simple": "ts-node --esm src/simple-cli.ts",
    "dev:advanced": "ts-node --esm src/cli.ts",
    "dev:interactive": "ts-node --esm src/cli-selector.ts",
    "test": "cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects unit --selectProjects integration:other --selectProjects docs --selectProjects security",
    "test:ci": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects unit --selectProjects integration:other --selectProjects docs --selectProjects security",
    "test:unit": "cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects unit",
    "test:unit:ts": "cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects unit --testMatch='**/*.test.ts'",
    "test:performance": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects performance:unit --selectProjects integration:performance --selectProjects integration:optimization-migration --maxWorkers=1 --forceExit",
    "test:performance:unit": "cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects performance:unit --maxWorkers=1 --forceExit",
    "test:integration": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects integration",
    "test:integration:optimization-migration": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects integration:optimization-migration",
    "test:integration:performance": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects integration:performance",
    "test:integration:other": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects integration:other",
    "test:integration:ci": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects integration:other",
    "test:docs": "cross-env NODE_OPTIONS='--experimental-vm-modules' jest --selectProjects docs",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:interactive": "playwright test tests/e2e/interactive",
    "test:e2e:interactive:debug": "playwright test tests/e2e/interactive --debug",
    "test:e2e:interactive:headed": "playwright test tests/e2e/interactive --headed",
    "playwright": "playwright",
    "playwright show-report": "playwright show-report",
    "test:ai-integration": "cross-env USE_REAL_AI=true NODE_OPTIONS='--experimental-vm-modules' jest --testPathPattern=integration/ai",
    "test:all": "npm run test:ci && npm run test:performance && playwright test",
    "test:all:full": "npm run build && cross-env NODE_OPTIONS='--experimental-vm-modules' jest && playwright test",
    "lint": "eslint src",
    "clean": "rm -rf dist",
    "docs:validate": "node scripts/validate-docs.js",
    "docs:lint": "markdownlint '**/*.md' --config .markdownlint.json",
    "docs:check-links": "markdown-link-check '**/*.md' --config .markdownlinkcheck.json",
    "docs:check-all": "npm run docs:lint && npm run docs:check-links && npm run docs:validate",
    "docs:generate": "typedoc",
    "docs:generate-legacy": "node scripts/generate-docs.js",
    "docs:generate-readme": "node scripts/generate-readme.js",
    "docs:generate-all": "npm run docs:generate && npm run docs:generate-readme",
    "docs:watch": "typedoc --watch",
    "docs:maintain": "node scripts/maintain-docs.js",
    "docs:update": "node scripts/update-docs.js",
    "docs:verify-examples": "node scripts/verify-examples.js",
    "docs:test-ci": "node scripts/test-docs-ci.js",
    "docs:deploy": "node scripts/deploy-docs.js",
    "docs:review": "node scripts/review-docs.js",
    "docs:version": "node scripts/version-docs.js",
    "docs:version:init": "node scripts/version-docs.js init",
    "docs:version:create": "node scripts/version-docs.js create",
    "docs:version:list": "node scripts/version-docs.js list",
    "docs:version:compare": "node scripts/version-docs.js compare",
    "docs:version:changelog": "node scripts/version-docs.js changelog",
    "docs:analytics": "node scripts/analytics-docs.js",
    "docs:analytics:init": "node scripts/analytics-docs.js init",
    "docs:analytics:track": "node scripts/analytics-docs.js track",
    "docs:analytics:report": "node scripts/analytics-docs.js report",
    "docs:analytics:export": "node scripts/analytics-docs.js export",
    "docs:automate": "node scripts/automate-docs.js",
    "docs:automate:run": "node scripts/automate-docs.js run",
    "docs:automate:maintenance": "node scripts/automate-docs.js maintenance",
    "docs:automate:update": "node scripts/automate-docs.js update",
    "docs:automate:optimize": "node scripts/automate-docs.js optimize",
    "docs:automate:monitor": "node scripts/automate-docs.js monitor",
    "docs:search": "node scripts/search-docs.js",
    "docs:search:init": "node scripts/search-docs.js init",
    "docs:search:index": "node scripts/search-docs.js index",
    "docs:search:interface": "node scripts/search-docs.js interface",
    "docs:test-suite": "node scripts/test-suite-docs.js",
    "docs:test-suite:run": "node scripts/test-suite-docs.js run",
    "docs:test-suite:validation": "node scripts/test-suite-docs.js validation",
    "docs:test-suite:content": "node scripts/test-suite-docs.js content",
    "docs:test-suite:functionality": "node scripts/test-suite-docs.js functionality",
    "docs:test-suite:performance": "node scripts/test-suite-docs.js performance",
    "docs:test-suite:security": "node scripts/test-suite-docs.js security",
    "docs:test-suite:compatibility": "node scripts/test-suite-docs.js compatibility",
    "docs:monitor": "node scripts/monitor-docs.js",
    "docs:monitor:init": "node scripts/monitor-docs.js init",
    "docs:monitor:start": "node scripts/monitor-docs.js start",
    "docs:monitor:stop": "node scripts/monitor-docs.js stop",
    "docs:monitor:check": "node scripts/monitor-docs.js check",
    "docs:monitor:report": "node scripts/monitor-docs.js report",
    "docs:monitor:status": "node scripts/monitor-docs.js status",
    "docs:optimize": "node scripts/optimize-docs.js",
    "docs:optimize:init": "node scripts/optimize-docs.js init",
    "docs:optimize:run": "node scripts/optimize-docs.js optimize",
    "docs:optimize:clear": "node scripts/optimize-docs.js clear",
    "docs:optimize:stats": "node scripts/optimize-docs.js stats",
    "docs:secure": "node scripts/secure-docs.js",
    "docs:secure:init": "node scripts/secure-docs.js init",
    "docs:secure:scan": "node scripts/secure-docs.js scan",
    "docs:secure:mask": "node scripts/secure-docs.js mask",
    "docs:secure:hash": "node scripts/secure-docs.js hash",
    "docs:secure:report": "node scripts/secure-docs.js report",
    "docs:secure:status": "node scripts/secure-docs.js status",
    "docs:accessibility": "node scripts/accessibility-docs.js",
    "docs:accessibility:init": "node scripts/accessibility-docs.js init",
    "docs:accessibility:scan": "node scripts/accessibility-docs.js scan",
    "docs:accessibility:report": "node scripts/accessibility-docs.js report",
    "docs:accessibility:status": "node scripts/accessibility-docs.js status",
    "book:extract": "ts-node --esm scripts/extract-book-content.ts",
    "docs:comprehensive": "node scripts/comprehensive-docs-automation.js",
    "docs:comprehensive:full": "node scripts/comprehensive-docs-automation.js full",
    "docs:comprehensive:maintenance": "node scripts/comprehensive-docs-automation.js maintenance",
    "docs:comprehensive:update": "node scripts/comprehensive-docs-automation.js update",
    "docs:comprehensive:validation": "node scripts/comprehensive-docs-automation.js validation",
    "docs:comprehensive:generation": "node scripts/comprehensive-docs-automation.js generation",
    "docs:comprehensive:deployment": "node scripts/comprehensive-docs-automation.js deployment",
    "docs:comprehensive:monitoring": "node scripts/comprehensive-docs-automation.js monitoring",
    "docs:comprehensive:optimization": "node scripts/comprehensive-docs-automation.js optimization",
    "docs:comprehensive:security": "node scripts/comprehensive-docs-automation.js security",
    "docs:comprehensive:accessibility": "node scripts/comprehensive-docs-automation.js accessibility",
    "docs:full-maintenance": "npm run docs:maintain && npm run docs:update"
  },
  "keywords": [
    "ollama",
    "ai",
    "code",
    "cli",
    "assistant",
    "local",
    "llm"
  ],
  "author": "Erich Champion",
  "license": "MIT",
  "dependencies": {
    "@types/ws": "^8.18.1",
    "dotenv": "^17.2.3",
    "inquirer": "^12.9.6",
    "node-fetch": "^3.3.1",
    "open": "^9.1.0",
    "ora": "^8.2.0",
    "table": "^6.9.0",
    "terminal-link": "^5.0.0",
    "uuid": "^13.0.0",
    "ws": "^8.18.3",
    "zod": "^4.1.8"
  },
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/preset-env": "^7.28.3",
    "@jest/globals": "^30.1.2",
    "@playwright/test": "^1.55.1",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.4.7",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "babel-jest": "^30.1.2",
    "cross-env": "^10.1.0",
    "eslint": "^8.46.0",
    "jest": "^30.1.3",
    "markdown-link-check": "^3.13.7",
    "markdownlint-cli": "^0.45.0",
    "remark-cli": "^12.0.1",
    "remark-validate-links": "^13.1.0",
    "ts-jest": "^29.4.2",
    "ts-node": "^10.9.1",
    "typedoc": "^0.28.13",
    "typedoc-plugin-markdown": "^4.9.0",
    "typescript": "^5.9.2"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": "https://github.com/erichchampion/ollama-code"
}
